{"ast":null,"code":"import * as i0 from \"@angular/core\"; // import \"./date-csl.ts\";\n\n/**\n * Православная Пасхалия есть основание для вычислений.\n * Реализуется в конструкторе. Предел Пасхалии 2099 год. Далее требуется корректировка вычислений со сдвигом – плюс один день. Если до 2100 года разница в вычислениях состовляет 13 единиц, то после 2100 года разница между числами в календарях достигнет 14 единиц.\n */\n\n/**\n * Текущее время очень важно для отработки всего скрипта.\n * `TimeBoxService` - момент времени захваченный и упакованный в Православную шкатулку времени.\n * Класс вычисляет последовательности седмиц, предПасхального периода, рядовых зачал, отступок и др. для текущего Богослужебного года.\n * Для правильных вычислений скрипту важно понимать в каком полугодии Богослужебного года «далее **БГ**» находится `timeBox`.\n *\n */\n\nexport let TimeboxService = /*#__PURE__*/(() => {\n  class TimeboxService {\n    constructor() {\n      // Во имя Отца и Сына и Святаго Духа. Аминь.\n      // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n      /**\n      * Экспонента (сокращение) числа для суток в миллисекундах (86400000).\n      *\n      */\n      this.CONST_MLS_DAY = 864E5;\n      /**\n      * Число 70-ти дней в миллисекудах (604800000).\n      *\n      */\n\n      this.CONST_MLS_MiF = this.CONST_MLS_DAY * 7 * 10;\n      this.CONST_LOG_WARNING = \"Будте вниматильней, проверте правильность вводимой даты.\";\n      this.ER_606 = \"НЕ ОПРЕДЕЛЕН КЛЮЧ ГОДА\";\n      /**\n       * Хранилище дат представленных в разных форматах:\n       * миллисекудах, строках.\n       */\n\n      this.formatsEaster = {\n        /**\n         * название дня\n         */\n        dayName: undefined,\n\n        /**\n         * число дня\n         */\n        dayNum: undefined,\n\n        /**\n         * Введенная дата (или текущая).\n         */\n        moment: undefined,\n        momentMLS: undefined,\n\n        /**\n         * Год текущей даты.\n         */\n        momentYear: undefined,\n\n        /**\n         * Возвращает дату прошедшей Православной Пасхи по Григоринскому календарю.\n         */\n        lastEaster: undefined,\n        lastEasterMLS: undefined,\n\n        /**\n         * Возвращает дату Православной Пасхи в текущем системном Григорианском календаре.\n         *\n         * Инициализация данной переменной зависит от момента времени и числа года\n         * по Григорианскому календарю. Так как Богослужебный год начинается и оканчивается\n         * датами Пасх, которые статичны и не должны менять своего значения в коде при\n         * наступлении гражданского нового года «ГНГ». Даты двух Пасх требуют корректировки\n         * ключа для поиска в массиве при наступлении ГНГ, то есть изменения системного года.\n         * Поиск дат Пасх происходит по текущему системному числу года календаря.\n         * Корретировка же ключа происходит по контрольной сумме,\n         * которой инициализируется свойство `keySystemYear`. Подробнее [здесь](../001.html).\n         */\n        easterMLS: undefined,\n\n        /**\n         * Пасха для текущей части БГ. Зависит от текущего системного года.\n         */\n        easter: undefined,\n        nextEasterMLS: undefined,\n\n        /**\n         * Возвращает дату ожидаемой Православной Пасхи по Григорианскому календарю.\n         */\n        nextEaster: undefined,\n\n        /**\n         * Дата Недели мытаря и фарисея.\n         */\n        mif: undefined,\n        mifMLS: undefined,\n\n        /**\n         * Дата Воздвижения Креста\n         */\n        vozdviggenie: undefined,\n        vozdviggenieMLS: undefined,\n        vhodMLS: undefined,\n        vhod: undefined,\n\n        /**\n         * Флаг первого понедельника после праздника Воздвижения Креста. Содержит значение строкового типа – `да` или `нет`.\n         * Уточняет наступление данного дня, в который начинается Евангелие от Луки, зачало 10.\n         */\n        mondayAfterVozdviggenie: undefined,\n\n        /**\n         * Количество промежуточных седмиц (Богоявленская отступка).\n         */\n        promWeeks: undefined,\n\n        /**\n         * Количество седмиц в БГ\n         */\n        allWeeks: undefined,\n\n        /**\n         * Номер текущей седмицы.\n         */\n        currentWeek: undefined,\n\n        /**\n         * Текущий месяц RU.\n         */\n        currentMonth: undefined,\n\n        /**\n         * Номер текущей седмицы с учетом отступки.\n         */\n        currentWeekStupka: undefined,\n\n        /**\n         * Дата начала Великого Поста.\n         */\n        beginningLent: undefined,\n        beginningLentMLS: undefined,\n\n        /**\n         * Остаток дней до Пасхи.\n         */\n        ostatok: undefined,\n\n        /**\n         * Дата праздника Вознесение (сороковой день после Воскресения\n         * Христова).\n         */\n        voznesenie: undefined,\n        voznesenieMLS: undefined,\n\n        /**\n         * Дата праздника Пятидесятницы.\n         */\n        pyatiDesyatnica: undefined,\n        pyatiDesyatnicaMLS: undefined,\n\n        /**\n         * Отступка или преступка на Воздвижение Креста.\n         * Вычисляется по наступлению первого понедельника по Воздвижению.\n         */\n        vozStupka: undefined,\n\n        /**\n         *  Глас текущей седмицы\n         */\n        glas: undefined,\n\n        /**\n         * Число Апракоса по Пасхе\n         */\n        capr: 11\n      };\n      /**\n       * Хранилище html-ссылок для DOM элементов\n       */\n\n      this.formatsLinks = {\n        // Ссылка на страницу текущего зачала.\n        linkToAprakosPage: 0,\n        // Встраивание элементов `DOM`\n        linkToElementIDSeed: undefined,\n        linkToElementID2: \"нет\",\n        linkToElementID3: \"нет\",\n        linkToElementID4: undefined,\n        linkToElementID5: undefined,\n        linkToElementID6: undefined\n      }; // Коллекция двунадесятых праздников, из которых 9\n      // статичны и 4 динамичных, которые требуют вычисления своих дат в зависимости от даты прошедшей Пасхи и соответствено текущей седмицы.\n\n      this.NINEHOLIDAYS = {\n        rojdestvoBogorodici: {\n          month: 9,\n          day: 21\n        },\n        vozdvijjenieKresta: {\n          month: 9,\n          day: 27\n        },\n        vvedenieVoHram: {\n          month: 12,\n          day: 3\n        },\n        rojdestvoXristovo: {\n          month: 1,\n          day: 7\n        },\n        kreshenieGospodne: {\n          month: 1,\n          day: 19\n        },\n        sretenieGospodne: {\n          month: 2,\n          day: 15\n        },\n        blagoveshenieBogorodici: {\n          month: 4,\n          day: 7\n        },\n        // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n        //  Здесь бывают по календарю еще четыре `ПЕРЕХОДЯЩИХ` празнества:\n        // 8. Вход Господень в Иерусалим,\n        // 0. Пасха(не входящая в состав двунадесятых),\n        // 9. Вознесение,\n        // 10. Пятьдесятница.\n        // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n        preobrajjenieGospodne: {\n          month: 8,\n          day: 19\n        },\n        uspenieBogorodici: {\n          month: 8,\n          day: 28\n        }\n      };\n      /**\n       * Названия дней седмицы в правильном порядке на русском языке.\n       */\n\n      this.arayDays = ['ВОСКРЕСЕНЬЕ', 'ПОНЕДЕЛЬНИК', 'ВТОРНИК', 'СРЕДА', 'ЧЕТВЕРГ', 'ПЯТНИЦА', 'СУББОТА'];\n      /**\n      * Правосавная Пасхалия по датам Григорианского Календаря 1999—2100 год.\n      * Имеет индексную сигнатуру (подпись).\n      *\n      */\n\n      this.paskhalia = {\n        1999: [4, 11],\n        2000: [4, 30],\n        2001: [4, 15],\n        2002: [5, 5],\n        2003: [4, 27],\n        2004: [4, 11],\n        2005: [5, 1],\n        2006: [4, 23],\n        2007: [4, 8],\n        2008: [4, 27],\n        2009: [4, 19],\n        2010: [4, 4],\n        2011: [4, 24],\n        2012: [4, 15],\n        2013: [5, 5],\n        2014: [4, 20],\n        2015: [4, 12],\n        2016: [5, 1],\n        2017: [4, 16],\n        2018: [4, 8],\n        2019: [4, 28],\n        2020: [4, 19],\n        2021: [5, 2],\n        2022: [4, 24],\n        2023: [4, 16],\n        2024: [5, 5],\n        2025: [4, 20],\n        2026: [4, 12],\n        2027: [5, 2],\n        2028: [4, 16],\n        2029: [4, 8],\n        2030: [4, 28],\n        2031: [4, 13],\n        2032: [5, 2],\n        2033: [4, 24],\n        2034: [4, 9],\n        2035: [4, 29],\n        2036: [4, 20],\n        2037: [4, 5],\n        2038: [4, 25],\n        2039: [4, 17],\n        2040: [5, 6],\n        2041: [4, 21],\n        2042: [4, 13],\n        2043: [5, 3],\n        2044: [4, 24],\n        2045: [4, 9],\n        2046: [4, 29],\n        2047: [4, 21],\n        2048: [4, 5],\n        2049: [4, 25],\n        2050: [4, 17],\n        2051: [5, 7],\n        2052: [5, 2],\n        2053: [4, 13],\n        2054: [5, 3],\n        2055: [5, 18],\n        2056: [4, 9],\n        2057: [4, 29],\n        2058: [4, 14],\n        2059: [5, 4],\n        2060: [4, 25],\n        2061: [4, 10],\n        2062: [4, 30],\n        2063: [4, 22],\n        2064: [4, 13],\n        2065: [4, 26],\n        2066: [4, 18],\n        2067: [4, 10],\n        2068: [4, 29],\n        2069: [4, 14],\n        2070: [5, 4],\n        2071: [4, 19],\n        2072: [4, 10],\n        2073: [4, 30],\n        2074: [4, 22],\n        2075: [4, 7],\n        2076: [4, 26],\n        2077: [4, 18],\n        2078: [5, 8],\n        2079: [4, 23],\n        2080: [4, 14],\n        2081: [5, 4],\n        2082: [4, 19],\n        2083: [4, 11],\n        2084: [4, 30],\n        2085: [4, 15],\n        2086: [4, 7],\n        2087: [4, 27],\n        2088: [4, 18],\n        2089: [5, 1],\n        2090: [4, 23],\n        2091: [4, 8],\n        2092: [4, 27],\n        2093: [4, 19],\n        2094: [4, 11],\n        2095: [4, 24],\n        2096: [4, 15],\n        2097: [5, 5],\n        2098: [4, 27],\n        2099: [4, 12],\n        2100: [5, 2]\n      };\n      /**\n      * Ключ системного года.\n      * Новый год делит на две части Пасхальный или Бгслужéбный Го́дъ.\n      * Положительное значение ключа указывает на первую часть `БГ`.\n      * Отрицательное значение указывает на вторую часть `БГ`.\n      *\n      */\n\n      this.keySystemYear = 0;\n      /**\n      * Конструктор может принимать дату в формате `YYYY/mm/dd`\n      * разделенную слешами ` / `. Метод проверяет введенную дату в\n      * диапазоне Пасхалии. Инициализирует `momemt` входящей датой и\n      * вызывает функции для вычисления необходимых значений. Метод\n      * `insertElements` вызывается внутри блока\n      * `try`, потому что в данном методе присутствует код для изменения\n      * элементов `DOM`.\n      *\n      * Рекомендация: - лучше вынести метод `insertElements` из\n      * конструктора класса `TimeBoxOrthodox`, вызывая его после\n      * определения экземпляра или в коде, или на странице `HTML`\n      *\n      */\n\n      this.date = undefined;\n      this.theMoment = new Date();\n\n      try {\n        if (this.date != undefined) {\n          // TODO: 434-2021-333 требуется валидация введенных параметров\n          let valDate = this.validate(this.date);\n          this.theMoment = new Date(valDate);\n          this.formatsEaster.moment = this.theMoment;\n          console.log(`Установленная дата: ${this.formatsEaster.moment.toString().slice(0, 15)}`);\n        } else {\n          // this.theMoment = new Date()\n          this.formatsEaster.moment = this.theMoment;\n          console.log(`Установленная дата: ${this.formatsEaster.moment.toString().slice(0, 15)}`);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n\n      this.calculateDatesEaster();\n      this.calculateAllWeks();\n      this.vozdviggenieKresta();\n      this.vhodGospoden();\n      this.calculateLinksAll();\n      this.voznesnieGospodne();\n      this.pyatDesyatnica();\n      this.currentMonthRU();\n\n      try {\n        this.insertElements();\n      } catch (e) {\n        console.log('Блока нет !!!');\n      } finally {\n        console.log('Продолжаем … полет по коду !!!');\n      }\n    }\n    /**\n     * Метод вычисляет номер гласа для текущей седмицы.\n     *\n     * @returns\n     */\n\n\n    glasSedmici() {\n      let gls = this.formatsEaster.currentWeek % 8 - 1;\n\n      if (gls > 0) {\n        this.formatsEaster.glas = gls;\n      } else if (gls < 0) {\n        this.formatsEaster.glass = 7;\n      } else {\n        this.formatsEaster.glass = 8;\n      }\n\n      return `Для текущей ${this.formatsEaster.currentWeek} седмицы установлен глас – ${this.formatsEaster.glas}`;\n    }\n    /**\n     * Проверяет диапазон для введенного значения\n     */\n\n\n    validate(userdate) {\n      let valYear = 0;\n      valYear = Number(userdate.slice(0, 4));\n\n      if (userdate.length > 3 && valYear >= 2016 && valYear <= 2100) {\n        // возврат к значениям по умолчанию\n        document.querySelectorAll('.colorBlock').forEach(n => n.classList.remove('colorBlock'));\n        document.querySelectorAll('.seeddayON').forEach(n => n.classList.replace('seeddayON', 'seedday'));\n        document.getElementById('zachala').innerHTML = `Зачала всего лета по Пасхе в год <span class=\"yearBG\">${valYear} </span>`;\n        document.location.replace('#'); // TODO: insert code 333\n\n        return `${userdate}/${this.theMoment.getMonth()}/${this.theMoment.getDate()}`;\n      } else {\n        throw `${valYear} ; Введенное вами: / ${userdate} / не подходит.\n                  Попробуйте ввести только номер года – \"2040\"`;\n      } // return userdate + \"/12/31\"\n\n    }\n\n    ngOnInit() {}\n    /**\n    * Высчитывает даты Пасх в зависимости от введенной даты и сохраняет их значения в милисекундах.\n    */\n\n\n    calculateDatesEaster() {\n      // Моммент в миллисекудах\n      this.formatsEaster.momentMLS = this.theMoment.getTime(); // Номер дня текущей даты.\n\n      this.formatsEaster.dayNum = this.theMoment.getDay() + 1; // Берем год от даты\n\n      this.formatsEaster.momentYear = this.formatsEaster.moment.getFullYear(); // Формируем строку-дату Пасхи для введенного ГНГ\n\n      this.formatsEaster.easter = `${this.formatsEaster.momentYear}/${this.paskhalia[this.formatsEaster.momentYear][0]}/${this.paskhalia[this.formatsEaster.momentYear][1]}`; // Форматируем в млсек.\n\n      let ddf = new Date(this.formatsEaster.easter);\n      this.formatsEaster.easterMLS = ddf.getTime(); // Конструктор для даты Пасхи\n\n      let easter = new Date(this.formatsEaster.easterMLS); // количество дней до Пасхи (-); от Пасхи (+) в зависимости от знака результата вычисления\n\n      this.keySystemYear = (this.formatsEaster.momentMLS - this.formatsEaster.easterMLS) / this.CONST_MLS_DAY;\n\n      if (this.keySystemYear > 0) {\n        var next = this.formatsEaster.momentYear + 1 + \"/\" + this.paskhalia[this.formatsEaster.momentYear + 1][0] + \"/\" + this.paskhalia[this.formatsEaster.momentYear + 1][1];\n        this.formatsEaster.nextEasterMLS = new Date(next).getTime();\n        this.formatsEaster.nextEaster = next;\n        this.formatsEaster.lastEasterMLS = easter.getTime();\n        this.formatsEaster.lastEaster = this.formatsEaster.easter;\n      } else {\n        var last = this.formatsEaster.momentYear - 1 + \"/\" + this.paskhalia[this.formatsEaster.momentYear - 1][0] + \"/\" + this.paskhalia[this.formatsEaster.momentYear - 1][1];\n        this.formatsEaster.nextEasterMLS = easter.getTime();\n        this.formatsEaster.nextEaster = easter.toString().slice(0, 15);\n        this.formatsEaster.lastEasterMLS = new Date(last).getTime();\n        this.formatsEaster.lastEaster = last;\n      }\n\n      this.mif();\n      return \"Мир всем!\";\n    }\n    /**\n     * Высчитывает Неделю мытаря и фарисея,\n     * которая начинается за десять седмиц до Православной Пасхи.\n     * Возвращает дату в формате слэш.\n    */\n\n\n    mif() {\n      this.formatsEaster.mifMLS = this.formatsEaster.nextEasterMLS - this.CONST_MLS_MiF;\n      this.formatsEaster.mif = new Date(this.formatsEaster.mifMLS).toString().slice(0, 15);\n      return `День мытаря и фарисея приходится на ${this.formatsEaster.mif}`;\n    }\n    /**\n     * Высчитывает дату Вознесения Господня для текущего БГ.\n     */\n\n\n    voznesnieGospodne() {\n      this.formatsEaster.voznesenieMLS = this.formatsEaster.lastEasterMLS + this.CONST_MLS_DAY * 39;\n      this.formatsEaster.voznesenie = new Date(this.formatsEaster.voznesenieMLS).toString().slice(0, 15);\n      return `Вознесение приходится на ${this.formatsEaster.voznesenie}`;\n    }\n    /**\n     * Дата Пятидесятницы.\n     * Возвращает дату Пятидесятницы для текущего БГ.\n     */\n\n\n    pyatDesyatnica() {\n      this.formatsEaster.pyatiDesyatnicaMLS = this.formatsEaster.lastEasterMLS + this.CONST_MLS_DAY * 49;\n      this.formatsEaster.pyatiDesyatnica = new Date(this.formatsEaster.pyatiDesyatnicaMLS).toString().slice(0, 15);\n      return `Пятьдесятница приходится на ${this.formatsEaster.pyatiDesyatnica}`;\n    }\n    /**\n     * Высчитывает  все что связано с седмицами.\n     * Заполняет массив вычисленными данными.\n     * Возвращает данные по седмицам (результаты вычислений).\n     */\n\n\n    calculateAllWeks() {\n      this.formatsEaster.dayName = this.arayDays[this.theMoment.getDay()]; // Количество седмиц в году.\n\n      this.formatsEaster.allWeeks = parseInt((this.formatsEaster.nextEasterMLS - this.formatsEaster.lastEasterMLS) / this.CONST_MLS_DAY / 7 + \"\", 10); // Количество промежуточных седмиц пред МиФ. Отступка Богояввденская.\n\n      this.formatsEaster.promWeeks = this.formatsEaster.allWeeks - 50; // TODO: // 436-2021-777 Выдает седмицу на единицу менее реальной из-за функции `parseInt()`\n      // Текущая седмица от Пасхи.\n\n      let sss = this.formatsEaster.currentWeek = parseInt((this.formatsEaster.momentMLS - this.formatsEaster.lastEasterMLS) / this.CONST_MLS_DAY / 7 + \"\", 10) + 1;\n      this.formatsEaster.capr = \"\" + sss + this.formatsEaster.dayNum; // Седмица начала Великого поста (Святой\n      // четыредесятницы)\n\n      this.formatsEaster.beginningLentMLS = parseInt(this.formatsEaster.nextEasterMLS - this.CONST_MLS_DAY * 48 + \"\", 10);\n      this.formatsEaster.beginningLent = new Date(this.formatsEaster.beginningLentMLS).toString().slice(0, 15);\n      this.formatsEaster.currentWeekStupka = sss - this.formatsEaster.promWeeks; // Высчитываем остаток дней до Пасхи.\n\n      let zero = parseInt((this.formatsEaster.nextEasterMLS - this.formatsEaster.momentMLS) / this.CONST_MLS_DAY + \"\", 10);\n      let today = \"Сегодня\"; // День Пасхи не входит в исчисление седмиц для БГ. На день Пасхи\n      // приходится следущая седмица по счету, то есть на единицу более\n      // последней седмицы. Проверка `zero` указывает на нулевую разницу\n      // меджду случившейся Пасхой и данным моментом времени.\n\n      if (zero == 0) {\n        this.formatsEaster.ostatok = \"СЕГОДНЯ ПАСХА ХРИСТОВА\";\n        today = \"Сегодня\";\n        console.log(`Сегодня Светлое Христово Воскресение. Христос Воскресе!`);\n      } else {\n        this.formatsEaster.ostatok = zero;\n        today = \"Остаток дней до Пасхи\";\n      }\n\n      return `${today} – ${this.formatsEaster.ostatok} \\n Богослужебных седмиц - ${this.formatsEaster.allWeeks}\\n Промежуточных седмиц - ${this.formatsEaster.promWeeks} \\n Текущая седмица - ${this.formatsEaster.currentWeek}\\n Седмица по Пятьдесятнице - ${this.formatsEaster.currentWeek - 7}`;\n    } // otstupkaVoz() {\n    // Функция должна вычислять размер отступки до наступления Воздвиженского Понедельника, которая корректирует ссылку на Апракос в том случае, если наступил понедельник 18 седмицы, а праздника Воздвижения еще не случилось.\n    // }\n\n    /**\n     * Высчитывает количество седмиц до праздника Воздвижения.\n     *\n     * Возвращает количество дней - ступок.\n     * @returns number\n     */\n    // TODO: // 463-2021-333 !!! не сделано !!!\n\n\n    vozdviggenieKresta() {\n      let stupka = 0;\n      let vozDescription = \"☦️\";\n      let sliceLastEaster = this.formatsEaster.lastEaster;\n      let sliceLastEaster2 = sliceLastEaster.slice(0, 4); // Определяем дату Воздвижения в МЛС.\n\n      this.formatsEaster.vozdviggenie = new Date(sliceLastEaster2 + \"/9/27\");\n      this.formatsEaster.vozdviggenieMLS = this.formatsEaster.vozdviggenie.getTime(); // Определение даты первого Понедельника следующей седмицы по Воздвижении Креста Господня – 27 сентября текущего года.\n\n      let a = new Date(this.formatsEaster.vozdviggenieMLS);\n      let aaa = 1 + 7 - a.getDay() % 7;\n      let updateTheDate = a.getDate() + aaa;\n      a.setDate(updateTheDate);\n      this.formatsEaster.mondayAfterVozdviggenie = a; // S:S спроектировать функцию  для вычисления отступки\n      // Деинит переменной, если еще не наступил Понедельник по Воздвижении.\n\n      if (this.theMoment.getTime() < this.formatsEaster.mondayAfterVozdviggenie.getTime()) {\n        this.formatsEaster.mondayAfterVozdviggenie = undefined;\n      } // В данной строке расчитывается количество седмиц от Недели Пятидесятницы до Недели Воздвижения Креста.\n      // `- 6` в конце строки кода указывает на счет от Пятидесятницы.\n\n\n      let kolichestvoSedmicPoPyatidesyatnice = (this.formatsEaster.vozdviggenieMLS - this.formatsEaster.lastEasterMLS) / this.CONST_MLS_DAY / 7 - 6; // Если `stupka` равна нулю, то отступки или преступки нет.\n\n      stupka = Math.floor(kolichestvoSedmicPoPyatidesyatnice) - 17;\n\n      if ( // Условие наступления отступки\n      stupka > 0 && this.formatsEaster.mondayAfterVozdviggenie && this.formatsEaster.vozdviggenie) {\n        // это отступка (- единица, это коррекция для седмицы в\n        // отличии от Недели)\n        console.log(`Отступка составляет - ${stupka} седмицы.`);\n        this.formatsEaster.vozStupka = stupka - 1;\n        vozDescription = `Воздвижение приходится на ${kolichestvoSedmicPoPyatidesyatnice} седмицу.\n            Отступка составляет - ${stupka} седмицы.`;\n      } else if ( //Условие преступки\n      stupka <= 0 && this.formatsEaster.mondayAfterVozdviggenie) {\n        this.formatsEaster.vozStupka = stupka;\n        vozDescription = `Воздвижение приходится на ${kolichestvoSedmicPoPyatidesyatnice} седмицу.\n            Преступка составляет -  ${stupka} седмицы`;\n      } else if ( // Условие отступки при наступления 17 седмицы но еще не состоявшегося праздника КрестоВоздвиженния\n      stupka > 0 && this.formatsEaster.currentWeek > 24 && this.formatsEaster.mondayAfterVozdviggenie == undefined && this.theMoment.getTime() < this.formatsEaster.vozdviggenie.getTime()) {\n        this.formatsEaster.vozStupka = stupka;\n      } else {\n        vozDescription = `Воздвижение приходится на седмицу - ${kolichestvoSedmicPoPyatidesyatnice}. Отступок нет.`; // console.log(`Седмица на Воздвижение - ${vozDescription}`)\n      }\n\n      return vozDescription;\n    }\n\n    vhodGospoden() {\n      // if(this.keySystemYear != 0){\n      this.formatsEaster.vhodMLS = this.formatsEaster.nextEasterMLS - this.CONST_MLS_DAY * 7;\n      this.formatsEaster.vhod = new Date(this.formatsEaster.vhodMLS).toString().slice(0, 15);\n      return `Вход Господень во Иерусалим: ${this.formatsEaster.vhod}`; // } else {\n      // console.log(CONST_LOG_WARNING)\n      //   return ER_606\n      // }\n    }\n\n    calculateLinksAll() {\n      let ccc = 0; // TODO: 11-2021\n\n      this.formatsLinks.linkToAprakosPage = this.formatsEaster.currentWeek + '/' + this.formatsEaster.dayNum + '.html'; // TODO: // корректировка отступки  для ссылок в древе на id седмицы /// 444-2021-555\n\n      if (this.formatsEaster.currentWeek > 40 && this.formatsEaster.promWeeks > 0) {\n        ccc = this.formatsEaster.currentWeekStupka; // TODO: // Требуется откорректировать ссылку с учётом отступки.\n\n        this.formatsLinks.linkToAprakosPage = ccc + '/' + this.formatsEaster.dayNum + '.html';\n        this.formatsLinks.linkToElementID2 = `<a href=\"#seed${ccc}\"  title=\"Сегодня : ${this.formatsEaster.dayName}\">${this.formatsEaster.promWeeks + ccc}</a>`;\n        this.formatsLinks.linkToElementID4 = `<a href=\"#seed${ccc}\"  title=\"Сегодня : ${this.formatsEaster.dayName}\">${this.formatsEaster.promWeeks + ccc - 7}</a>`;\n      } else if (this.formatsEaster.currentWeek > 21 && this.formatsEaster.currentWeek < 27) {\n        ccc = this.formatsEaster.currentWeek - this.formatsEaster.vozStupka;\n        this.formatsLinks.linkToAprakosPage = ccc + '/' + this.formatsEaster.dayNum + '.html';\n        this.formatsLinks.linkToElementID2 = `<a href=\"#seed${ccc}\"  title=\"Сегодня : ${this.formatsEaster.dayName}\">${this.formatsEaster.currentWeek}</a>`;\n        this.formatsLinks.linkToElementID4 = `<a href=\"#seed${ccc}\"  title=\"Сегодня : ${this.formatsEaster.dayName}\">${this.formatsEaster.currentWeek - 7}</a>`;\n      } else {\n        let ccc = this.formatsEaster.currentWeek;\n        this.formatsLinks.linkToElementID2 = `<a href=\"#seed${ccc}\"  title=\"Сегодня : ${this.formatsEaster.dayName}\">${ccc}</a>`;\n        this.formatsLinks.linkToElementID4 = `<a href=\"#seed${ccc}\"  title=\"Сегодня : ${this.formatsEaster.dayName}\">${ccc - 7}</a>`;\n      }\n    }\n    /**\n     * Метод встраивает и изменяет элементы DOM\n     *\n     * В методе корректируется данные, которые задают ссылку на id-элемент страницы.\n     * Также, в данном месте, нужно вывести date3 в DOM название для блока.\n     * Это название выводиться всегда и в ином виде только для первой седмицы.\n     * На главной странице вид счета седмиц должен оставаться неизменным и последовательным.\n     * Ссылка же на id-элемент страницы  изменяется с учётом отступок и преступок.\n     *\n     * TODO:  Требуется добавить код для вычисления Воздвиженской отступки. /// 445-2021-555\n     */\n\n\n    insertElements() {\n      this.glasSedmici(); // Вставляем глас седмицы по Октоиху\n\n      document.getElementById('date5').innerHTML = `Глас седмицы - ${this.formatsEaster.glas}`;\n      let description = \"Метод класса. Вставляет элементы DOM.\";\n\n      if (this.formatsEaster.currentWeekStupka < 51) {\n        document.getElementById('date2').innerHTML = this.formatsLinks.linkToElementID2;\n        document.getElementById('date4').innerHTML = this.formatsLinks.linkToElementID4;\n      } else {\n        document.getElementById('date').innerHTML = \"ХРИСТОС ВОСКРЕСЕ!\";\n        document.getElementById('date').className += \" XB\";\n      }\n\n      if (this.formatsEaster.currentWeek > 7) {\n        document.getElementById('date3').innerHTML = \"По Пятидесятнице\";\n      } else if (this.formatsEaster.currentWeek == 1) {\n        document.getElementById('date3').innerHTML = \"СВЕТЛАЯ СЕДМИЦА\";\n        document.getElementById('date4').remove();\n      } else {\n        // здесь можно разместить код для 49 дней по Пасхе \n        document.getElementById('date3').remove();\n        document.getElementById('date4').remove();\n        document.getElementById('date5').remove();\n      } // Выделение блока текущей седмицы.\n\n\n      var slb,\n          vvv = \"seed\";\n      let seedday = \"none\";\n\n      if (this.formatsEaster.currentWeek > 40 && this.formatsEaster.ostatok > 70) {\n        //  если есть отступка, меняем цвет и\n        //  добавляем классы `.colorBlock .promWeeks`\n        vvv = vvv + this.formatsEaster.currentWeekStupka;\n        slb = \" colorBlock promWeek\";\n        document.getElementById(vvv).style.backgroundColor = '#d5d5d5';\n        seedday = \"seedday-\" + this.formatsEaster.currentWeekStupka + \"-\" + this.formatsEaster.dayNum;\n      } // =-=-=-=-=-=-=-=-=\n\n\n      if (this.formatsEaster.currentWeek > 40 && this.formatsEaster.ostatok < 70) {\n        //  отступка закончилась, меняем цвет на обратный и\n        // оставляем счет седмиц с учетом отступки\n        vvv = vvv + this.formatsEaster.currentWeekStupka;\n        slb = \" colorBlock\"; // document.getElementById(vvv).style.backgroundColor = '#d5d5d5';\n\n        seedday = \"seedday-\" + this.formatsEaster.currentWeekStupka + \"-\" + this.formatsEaster.dayNum;\n      } // Оформление блока на время отступки до Воздвижения Креста.\n\n\n      if (this.formatsEaster.currentWeek >= 22 && this.formatsEaster.currentWeek <= 27 && this.formatsEaster.vozStupka > 0) {\n        vvv = vvv + (this.formatsEaster.currentWeek - this.formatsEaster.vozStupka);\n        slb = \" colorBlock\";\n        seedday = \"seedday-\" + (this.formatsEaster.currentWeek - this.formatsEaster.vozStupka) + \"-\" + this.formatsEaster.dayNum;\n      } else if (this.formatsEaster.currentWeek >= 22 && this.formatsEaster.currentWeek <= 27 && this.formatsEaster.vozStupka < 0) {\n        vvv = vvv + (this.formatsEaster.currentWeek - this.formatsEaster.vozStupka);\n        slb = \" colorBlock\";\n        seedday = \"seedday-\" + (this.formatsEaster.currentWeek - this.formatsEaster.vozStupka) + \"-\" + this.formatsEaster.dayNum;\n      } else if (this.formatsEaster.currentWeek <= 40) {\n        vvv = vvv + this.formatsEaster.currentWeek;\n        slb = \" colorBlock\";\n        seedday = \"seedday-\" + this.formatsEaster.currentWeek + \"-\" + this.formatsEaster.dayNum;\n      } // TODO: // Требуется продолжить скрипт на условиях дальнейшего распротранения. 436-2021-555\n      // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n      // День Пасхи приходится на начало следующей седмицы по системному календарю, которая числом превышает\n      // допущенный диаппазон с учетом отступок в 50 седмиц. Поэтому при наступлении исключения\n      // делается редирект на Пасхальный канон.  Достсуп же ко всем другим зачалам закрывается.\n\n\n      document.getElementById(seedday).className += 'ON';\n      document.getElementById(vvv).className += slb; // alert(\"Xристос Bоскрксе!\\nСегодня светлое Христово Воскресение!\")\n      //\n      // document.location.replace('1/1.html')\n      // console.log('-=-=-=-=-=-',vvv, colorBlockID)\n\n      return description;\n    }\n\n    currentMonthRU() {\n      let arrayMothsRu = [\"Января\", \"Февраля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\", \"Июля\", \"Августa\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\"];\n      this.formatsEaster.currentMonth = arrayMothsRu[this.theMoment.getMonth()];\n      return this.formatsEaster.currentMonth;\n    }\n\n  }\n\n  // end class\n  TimeboxService.ɵfac = function TimeboxService_Factory(t) {\n    return new (t || TimeboxService)();\n  };\n\n  TimeboxService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TimeboxService,\n    factory: TimeboxService.ɵfac,\n    providedIn: 'root'\n  });\n  return TimeboxService;\n})();","map":null,"metadata":{},"sourceType":"module"}